Microsoft Windows [Version 10.0.22631.5624]
(c) Microsoft Corporation. All rights reserved.

C:\Program Files\MongoDB\Server\8.2\bin>mongosh
Current Mongosh Log ID: 69ef9f01234567890abcdefd0
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.5.8
Using MongoDB:          8.2.1
Using Mongosh:          2.5.8

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
    The server generated these startup warnings when booting
    2025-10-28T22:30:01.123+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> show dbs;
Warehouse_db    8.00 KiB
admin          40.00 KiB
config        108.00 KiB
ecommerce_db  140.00 KiB
employee_db   152.00 KiB
local          72.00 KiB
test> use warehouse_db;
switched to db warehouse_db
warehouse_db> show collections

warehouse_db> db.products.find();

warehouse_db> use Warehouse_db;
switched to db Warehouse_db
Warehouse_db> show collections;
Products
Warehouse_db> db.Products.find();
[
  {
    _id: ObjectId('69ef9f0a1234567890abcdefd1'),
    product_id: 101,
    name: 'Laptop',
    category: 'Electronics',
    stock_level: 50
  },
  {
    _id: ObjectId('69ef9f0a1234567890abcdefd2'),
    product_id: 102,
    name: 'Apples',
    category: 'Groceries',
    stock_level: 500
  },
  {
    _id: ObjectId('69ef9f0a1234567890abcdefd3'),
    product_id: 103,
    name: 'T-Shirt',
    category: 'Apparel',
    stock_level: 200
  },
  {
    _id: ObjectId('69ef9f0a1234567890abcdefd4'),
    product_id: 104,
    name: 'Headphones',
    category: 'Electronics',
    stock_level: 150
  },
  {
    _id: ObjectId('69ef9f0a1234567890abcdefd5'),
    product_id: 105,
    name: 'Table Lamp',
    category: 'Home Goods',
    stock_level: 300
  },
  {
    _id: ObjectId('69ef9f0a1234567890abcdefd6'),
    product_id: 106,
    name: 'Milk',
    category: 'Groceries',
    stock_level: 1000
  },
  {
    _id: ObjectId('69ef9f0a1234567890abcdefd7'),
    product_id: 107,
    name: 'Jeans',
    category: 'Apparel',
    stock_level: 150
  },
  {
    _id: ObjectId('69ef9f0a1234567890abcdefd8'),
    product_id: 108,
    name: 'Smart TV',
    category: 'Electronics',
    stock_level: 20
  },
  {
    _id: ObjectId('69ef9f0a1234567890abcdefd9'),
    product_id: 109,
    name: 'Towels',
    category: 'Home Goods',
    stock_level: 120
  },
  {
    _id: ObjectId('69ef9f0a1234567890abcdefee0'),
    product_id: 110,
    name: 'Shirts',
    category: 'Apparel',
    stock_level: 400
  }
]
Type "it" for more
Warehouse_db> var map1 = function() {
...    emit(this.category, this.stock_level);
...  };
...

Warehouse_db> var reduce1 = function(key, values) {
...    return Array.sum(values);
...  };
...

Warehouse_db> db.Products.mapReduce(
...    map1,
...    reduce1,
...    {
...      out: "Stock_By_Category"
...    }
...  );
...
DeprecationWarning: Collection.mapReduce() is deprecated. Use an aggregation instead.
See https://mongodb.com/docs/manual/core/map-reduce for details.
{ result: 'Stock_By_Category', ok: 1 }
Warehouse_db> db.Stock_By_Category.find().pretty();
[
  { _id: 'Apparel', value: 750 },
  { _id: 'Electronics', value: 220 },
  { _id: 'Groceries', value: 1500 },
  { _id: 'Home Goods', value: 420 }
]